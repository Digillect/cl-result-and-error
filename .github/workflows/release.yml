name: Release

on:
  push:
    tags:
      - "v*"

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Determine version
        id: version
        uses: nowsprinting/check-version-format-action@v3
        with:
          prefix: 'v'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release /p:Version="$version" /p:AssemblyVersion="$version" /p:InformationalVersion="$full_version"
        env:
          version: "${{ steps.version.outputs.major_without_prefix }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}.0"
          full_version: "${{ steps.version.outputs.major_without_prefix }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}.0-${{ steps.version.outputs.prerelease }}"

      - name: Test
        run: dotnet test --no-build -c Release

      - name: Package
        run: |
          mkdir artifacts
          dotnet pack --no-build -c Release -o artifacts /p:Version="${{ steps.version.outputs.full_without_prefix }}"

      - name: Upload package to MyGet
        run: dotnet nuget push artifacts/*.nupkg -k ${{ secrets.MYGET_API_KEY }} -s https://www.myget.org/F/digillect/api/v3/index.json

      - name: Upload package to NuGet
        if: steps.version.outputs.is_stable
        run: dotnet nuget push artifacts/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
